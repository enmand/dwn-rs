[env]
CARGO_MAKE_RUN_CODECOV = true
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true
CARGO_MAKE_CARGO_BUILD_TEST_FLAGS = "--lib"
CARGO_MAKE_COVERAGE_PROVIDER = "kcov"

[tasks.build-wasm]
workspace = false
cwd = "crates/dwn-rs-wasm"
command = "wasm-pack"
args = [
    "build",
    "--target",
    "nodejs",
    "--out-name",
    "index",
    "--",
    "--no-default-features",
    "--features",
    "surrealdb-wasm",
    "--features",
    "no-std",
]
dependencies = ["install-wasm-pack"]

[tasks.build-wasm-no-opt]
workspace = false
cwd = "crates/dwn-rs-wasm"
command = "wasm-pack"
args = [
    "build",
    "--no-opt",
    "--target",
    "nodejs",
    "--out-name",
    "index",
    "--",
    "--no-default-features",
    "--features",
    "surrealdb-wasm",
    "--features",
    "no-std",
]
dependencies = ["install-wasm-pack"]

[tasks.build-wasm-browser]
workspace = false
cwd = "crates/dwn-rs-wasm"
command = "wasm-pack"
args = [
    "build",
    "--target",
    "web",
    "--out-name",
    "index",
    "--out-dir",
    "browsers",
    "--",
    "--no-default-features",
    "--features",
    "surrealdb-wasm",
    "--features",
    "no-std",
]
dependencies = ["install-wasm-pack"]

[tasks.build-wasm-browser-no-opt]
workspace = false
cwd = "crates/dwn-rs-wasm"
command = "wasm-pack"
args = [
    "build",
    "--no-opt",
    "--target",
    "web",
    "--out-name",
    "index",
    "--out-dir",
    "browsers",
    "--",
    "--no-default-features",
    "--features",
    "surrealdb-wasm",
    "--features",
    "no-std",
]
dependencies = ["install-wasm-pack"]

[tasks.install-npm-deps]
workspace = false
cwd = "crates/dwn-rs-wasm"
command = "npm"
args = ["install", "--include", "dev"]

[tasks.test-store-js]
workspace = false
cwd = "crates/dwn-rs-wasm"
command = "node"
args = ["node_modules/mocha/bin/mocha.js", "tests/test.js", "--bail", "--exit"]
dependencies = ["build-wasm", "install-npm-deps"]

[tasks.test-store-js-browser]
workspace = false
cwd = "crates/dwn-rs-wasm"
command = "npx"
args = ["wtr"]
dependencies = ["build-wasm-browser", "install-npm-deps", "_playwright-install"]

[tasks.test-store-js-no-opt]
workspace = false
cwd = "crates/dwn-rs-wasm"
command = "node"
args = ["node_modules/mocha/bin/mocha.js", "tests/test.js", "--bail", "--exit"]
dependencies = ["build-wasm-no-opt", "install-npm-deps"]

[tasks._playwright-install]
args = ["playwright", "install", "--with-deps"]
workspace = false
cwd = "crates/dwn-rs-wasm"
command = "npx"
dependencies = ["install-npm-deps"]

[tasks.test-cargo]
command = "cargo"
args = ["test", "--profile", "dev-fast", "--", "--nocapture"]

[tasks.test-cargo-ci]
command = "cargo"
args = ["test", "--profile", "ci", "--", "--nocapture"]

[tasks.test-cargo-release]
command = "cargo"
args = ["test", "--profile", "release", "--", "--nocapture"]

[tasks.build-dev-fast]
command = "cargo"
args = ["build", "--profile", "dev-fast"]

[tasks.build-release]
command = "cargo"
args = ["build", "--profile", "release"]

[tasks.bench]
command = "cargo"
args = ["bench", "--profile", "bench"]

[tasks.dev]
dependencies = ["build-dev-fast", "test-cargo"]

[tasks.dev-wasm]
dependencies = ["build-dev-fast", "test-cargo", "build-wasm", "test-store-js"]

[tasks.build-all]
dependencies = ["build-release", "build-wasm", "build-wasm-browser"]

[tasks.test-all]
dependencies = ["test-cargo-release", "test-store-js", "test-store-js"]

[tasks.ci]
dependencies = ["build-release", "test-cargo-ci", "build-wasm", "test-store-js"]

[tasks.install-wasm-pack]
command = "cargo"
args = ["install", "wasm-pack"]
condition = { files_not_exist = ["${CARGO_HOME}/bin/wasm-pack"] }
